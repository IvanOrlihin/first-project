1. Консольный интерфейс для управления программой;
а) В бесконечном цикле выводить меню с возможными операциями ввода/вывода из заявленной функциональности.
Процесс управления должен быть непрерывным, поэтому его корректнее поместить в бесконечный цикл.
2. Хранение данных о количестве пройденных шагов за несколько месяцев;
а) Запись результатов в определённую упорядоченную структуру данных.
Для быстрого хранения и обращения к данным их необходимо упорядочить.
б) Какую структуру лучше выбрать для хранения количества шагов за день в рамках одного месяца?
Массив отлично подходит: к дню можно обратиться через его порядковый номер.
3. Ввод цели по количеству шагов в день;
а)Записывать число в отдельную переменную, использовать её при подсчёте статистики.
Цель общая на всё приложение, её нужно где-то хранить.
4. Ввод пройденного количества шагов за день;
а) Запрашивать номер месяца, день и количество шагов, сохранять количество шагов в соответствующую переменную.
Чтобы понять, за какой день стоит ввести количество шагов, необходимо также запросить месяц и день.
5. Вывод статистики за определённый месяц.
а) Запрашивать номер месяца, считать для него данные для статистики, выводить эти данные на экран.
Чтобы понять, за какой месяц посчитать статистику, необходимо запросить месяц.
ЛОГИКА ПРОГРАММЫ ПО КЛАССАМ
main.java 
а) Выбор пункта меню;
б) Вывод меню;
Converter.java
а) Преобразование шагов в километры
б) Преобразование шагов в килокалории
MonthData.java
а) Хранение данных конкретного месяца
б) Логика по подсчету статистики за месяц
StepTracker.java
а) Логика по сохранению количества шагов: ввод месяца, дня, количества шагов и сохранение данных
б) Логика по изменению ежедневной нормы шагов 
в) Вывод статистики
